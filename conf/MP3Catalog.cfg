#!/usr/bin/python
# -*- coding: utf-8 -*-

import sys, os
import logging

ScriptFullName   = os.path.abspath(sys.argv[0])
ScriptAbsPath    = os.path.dirname(ScriptFullName)

excelFname    = ScriptAbsPath + '\..\Dati\MP3_Master_2011-01-27'
excelFname    = ScriptAbsPath + '\..\Dati\MP3_Master_prova'
excelFname    = ScriptAbsPath + '\..\Dati\MP3_Master_2012-01-01'
excelFname    = ScriptAbsPath + '\..\Dati\MP3_Master_2012-Prova'
excelFname    = ScriptAbsPath + '\..\Dati\MP3_Master_2012-04-25'
excelFname    = ScriptAbsPath + '\..\Dati\MP3_Master_2012-06-24'
excelFname    = ScriptAbsPath + '\..\Dati\MP3_Master_2012-08-10'
excelFname    = ScriptAbsPath + '\..\Dati\MP3_Master_2012-08-12'
excelFname    = ScriptAbsPath + '\..\Dati\MP3_Master_2013-01-20'
excelFname    = ScriptAbsPath + '\..\Dati\MP3_Master_2013-02-19'
excelFname    = ScriptAbsPath + '\..\Dati\MP3_Master_2013-02-23f'
MP3baseDIR    = 'd:\MyData\MP3'


# #########################################################################
# # Global Variables
# #########################################################################
MainSection = {
    'LOG_FILE'          : logging.DEBUG,
    'LOG_FILE'          : logging.INFO,
    'LOG_CONSOLE'       : logging.INFO,
    'FIELDS_NAME'       : 5,
    'FIRST_SONG_ROW'    : 8,
    'ACTION'            : 'EXTRACT',
    'ACTION'            : 'Merge',
    'ACTION'            : 'RANDOM',

    'START EXCEL COLUMN'        : 'B',
    'Nomi Colonne Primarie'  : ['Type', 'Author Name', 'Album Name', 'Song Name'],
    'Nomi Colonne Attributi' : [
                                'Punteggio',
                                'Analizzata',
                                'Recomended',
                                'Loreto',
                                'Buona',
                                'Soft',
                                'Vivace',
                                'Camera',
                                'Car',
                                'Lenta',
                                'Country',
                                'Strumentale',
                                'Classica',
                                'Lirica',
                                'Jazz',
                                'Live',
                                'Discreta',
                                'Undefined',
                                'Avoid it', 'Confusionaria', 'Noiosa', 'Bad Audio', 'Rovinata', 'Duplicata', 'Song Size',
                                ],

}


# #########################################################################
# # External Global Variables
# #########################################################################
# import LnFuncs              as Ln
# GV = Ln.loadConfigModule("T2IA_Checks_MainVars.cfg", fDEBUG=False)
# print GV.wGetErrorStrings
# import T2IA_Checks_MainVars as GV

# #########################################################################
# # Parametri utilizzati per il MERGE
# #########################################################################
MergeSection = {
    'LOG_FILE'          : logging.DEBUG,
    'LOG_FILE'          : logging.INFO,
    'LOG_CONSOLE'       : logging.INFO,

    'excelInputFile'    : excelFname + '.xls',
    'excelOutputFile'   : excelFname + '_Merged.xls',
    'baseDir'           : MP3baseDIR,

    'dir to scan' : [
                        # MP3baseDIR + '\Prova',
                        MP3baseDIR + '\Bambini',
                        MP3baseDIR + '\Chitarra',
                        MP3baseDIR + '\Classica',
                        MP3baseDIR + '\Country',
                        # MP3baseDIR + '\I maestri della musica',
                        MP3baseDIR + '\Italiani',
                        MP3baseDIR + '\Natale',
                        MP3baseDIR + '\Popolari',
                        MP3baseDIR + '\Stranieri',
                        # MP3baseDIR + '\Opera',
                        MP3baseDIR + '\Themes',
                    ],

}


# #########################################################################
# # Parametri utilizzati per il EXTRACT
# #########################################################################
ExtractSection = {
    'LOG_FILE'          : logging.DEBUG,
    'LOG_FILE'          : logging.INFO,
    'LOG_CONSOLE'       : logging.INFO,


    'excelInputFile'   : excelFname + '.xls',
    'excelOutputFile'  : excelFname + '_Extracted.xls',

    # 'Punteggi'          : [ 9, 8, 7, 6 ],
    # 'Punteggi'   : [ 25, 24, 20 ],
    'Punteggi'   : [ 640, 1016],


}

# #########################################################################
# # Parametri utilizzati per  EXTRACT
# #########################################################################
RandomSection = {
    'LOG_FILE'          : logging.DEBUG,
    'LOG_FILE'          : logging.INFO,
    'LOG_CONSOLE'       : logging.INFO,

    'Destination Directory'   : 'E:\FFFF\MP3',
    # 'Order Punteggi'   : 'RANDOM',
    'Extraction Order'   : 'firstMAX - restRANDOM',

        # Uno qualsiasi dei seguenti vlori porta alla chiusura dell'estrazione
    'MAX_SONGS'         : 50000,                # numero Massimo di canzoni da estrarre
    'FILL_DISK'         : True,                 # Controlla anche il riempimento del disco
    'PrefixSong'        : False,                # Mette <N.Cognome-> dell'autore prima del titolo della canzone

    # 'MAX_AUTHORS_SONGS' : 10,                   # Massimo numero di canzoni per ogni autore
    'MAX_AUTHORS_SONGS' : {
                'DEFAULT'               : 10,                   # Massimo numero di canzoni di DEFAULT
                'New Age'               : 10,                   # Massimo numero di canzoni
                'Deb Talan'             : 20,                   # Massimo numero di canzoni
                'Graziani Ivan'         : 20,                   # Massimo numero di canzoni
                'Barbarossa Luca'       : 20,                   # Massimo numero di canzoni
                'Guccini Francesco'     : 30,                   # Massimo numero di canzoni
                'De Gregori Francesco'  : 30,                   # Massimo numero di canzoni
                'Vecchioni Roberto'     : 30,                   # Massimo numero di canzoni
    },

    'MAX_OUT_DIR_SIZE'  : 2500000000,           # Massimo SIZE in bytes da occupare
    'MAX_OUT_DIR_SIZE'  : 4001898496,           # 3.908.104.000 --> Usb da 4GB
    'MAX_OUT_DIR_SIZE'  : 1052774400,           # 1.028.100.000 ---> SD da 1GB
    'MAX_OUT_DIR_SIZE'  : 3000000000,           # 3.000.000.000 --> Scheda micro-SD da 4GB sul cellulare. Lasciamo un pò di spazio libero
    'MAX_OUT_DIR_SIZE'  : 963232000,            # 1.000.000.000 --> Lettore MP3 GoGear
    'MAX_OUT_DIR_SIZE'  : 671088640,            # CD 640*1024*1024
    'MAX_OUT_DIR_SIZE'  : 3997732864,           # 3.908.036.000 --> Usb da 4GB (Fabio Ottaviani card)
    'MAX_OUT_DIR_SIZE'  : 2013888512,           # 1.966.688.000 ---> SD da 2GB
    'MAX_OUT_DIR_SIZE'  : 736100352,            # CD-RW 702*1024*1024 --> CD-RW bianchi di Banca
    'MAX_OUT_DIR_SIZE'  : 15990931456,          # 16GBytes microSD - da verificare
    'MAX_OUT_DIR_SIZE'  : 7995465728,           # 8GBytes microSD - da verificare

    # I valori di questo dictionary sono modificati dal codice della funzione calcola()
    #
    'PERCENT' : {    # (Percentuale , MAX_BYTES)
        'Natale'     : ( 0.0        , 0),
        'Bambini'    : ( 0.0        , 0),
        'Italiani'   : (70.0        , 0),
        'Stranieri'  : (20.0        , 0),
        'Themes'     : ( 0.0        , 0),
        'Classica'   : (0.0        , 0),
        'Popolari'   : (5.0        , 0),
        'Country'    : (10.0        , 0),
        'Chitarra'   : (5.0        , 0),
    },

    # 'PERCENT' : {    # (Percentuale , MAX_BYTES)
        # 'Italiani'   : (100.0        , 0),
    # },


    'autoriParticolari' : {
        'Santo & Jonny'                         :   'S&J-',
        'Banco del Mutuo Soccorso'              :   'BMS-',
        'Audio 2'                               :   'Audio2-',
        'Cugini Di Campagna'                    :   'CdC-',
        'DJ Francesco'                          :   'DjFranc-',
        'Generazione 19xx'                      :   'Gen.19xx-',
        'I favolosi anni 60'                    :   'Anni60-',
        'Italia del rock'                       :   'ItRock-',
        'Le Orme'                               :   'LeOrme-',
        'Loreto & Michela'                      :   'L&M-',
        'Luna POP'                              :   'LunaPop-',
        'Studio 3'                              :   'Studio3-',
        'Wess & Dori Ghezzi'                    :   'W&DG-',
        'Earth wind & fire'                     :   'EW&Fire-',
        'Karl Perazzo and Raul Rekow'           :   'KPRR-',
        'Music from the ANDEs'                  :   'Ande-',
        'Miranda Lee Richards'                  :   'M.L.Richards-',
        'Original Motion Picture SoundTrack'    :   'OMPS-',
        'Piano Love songs'                      :   'Piano-',
        'Red Hot Chili Peppers'                 :   'RHChiliPeppers-',
        'Simon and Garfunkel'                   :   'S&Gfk-',
        'The Corrs'                             :   'Corrs-',
        'The Cranberries'                       :   'Cranberries-',
        'The Feeling'                           :   'Feeling-',
        'The Nothing HillBillies'               :   'N.HillBillies-',
        'The Weepies'                           :   'Weepies-',
        'World Cafe Next'                       :   'WorldCafe-',
        "Canzoni sotto l'albero"                :   "Natale-",
        "Carlos Fanelli & CO"                   :   "C.Fanelli-",
        "Country and Western"                   :   "Country&W-",
    },


}

def calcola():
    global totPercent, newTotal
    totPercent = 0
    for key, val in RandomSection['PERCENT'].items():
        totPercent += val[0]


    if totPercent != 100:
        print
        print "Percentuali [%d] impostate sono diverse da 100!!!" % (totPercent)
        print "Verrà fatto il ricalcolo in proporzione"
        print


    newTotal = 0
    for key, val in RandomSection['PERCENT'].items():
            #  Allineamento a 100 delle percentuali
            #   x : 70 = 100 : TotalPercent
        val0 = (val[0] * 100) /totPercent
        newTotal += val0

            #  calcolo del size corrispondente alla percentuale
            #  x : MAX_OUT_DIR_SIZE = perc : 100
        RandomSection['PERCENT'][key] = val0, (val0 * RandomSection['MAX_OUT_DIR_SIZE']) / 100


calcola()

    # Verifica della percentuale
if __name__ == "__main__":
    print "\n"*2
    print "Valori in Bytes in base alla categoria"
    total=0
    for key, val in RandomSection['PERCENT'].items():
        (percent, MaxBytes) = val
        print "     %-15s : %-10d %d" % (key, percent, MaxBytes)
        total += MaxBytes
    print
    print "     expected        : %-10d %d" % (totPercent,  RandomSection['MAX_OUT_DIR_SIZE'])
    print "     calculated      : %-10d %d" % (newTotal,    total)

    # sectID = RandomSection['MAX_AUTHORS_SONGS']
    # aa = sectID.get('DEFAULT', 5)
    # print aa
    # print RandomSection['MAX_AUTHORS_SONGS']['DEFAULT']
    # for key, val in RandomSection['MAX_AUTHORS_SONGS'].items():
        # print key, val
        # if key == 'New Age':
            # print key